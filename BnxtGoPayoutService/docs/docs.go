// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bnxt/createContact": {
            "post": {
                "description": "Create a new contact based on provided payee id and user id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Create Contact API"
                ],
                "summary": "Create a new Contact",
                "operationId": "create-contact",
                "parameters": [
                    {
                        "description": "Request payload to create a contact",
                        "name": "requestPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RequestToContactApi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response with contact details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error response when there is a bad request or an api error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/bnxt/createFundAccount": {
            "post": {
                "description": "Create a new fund account based on provided contact id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Create Fund account API"
                ],
                "summary": "Create a new Fund Account",
                "operationId": "create-fund-account",
                "parameters": [
                    {
                        "description": "Request payload to create a func account",
                        "name": "requestFundAccountPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RequestToFundAccountApi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with fund account details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error response when there is a bad request or an api error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/bnxt/createPayoutAccount": {
            "post": {
                "description": "Create a new payout based on provided payment id and payee id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Create Payout API"
                ],
                "summary": "Create a new payout",
                "operationId": "create-payout",
                "parameters": [
                    {
                        "description": "Request payload to create a payout",
                        "name": "createPayoutRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RequestToPayoutAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response with payout details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error response when there is a bad request or an api",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/pendingEvent": {
            "post": {
                "description": "Create a new Payout event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payout events"
                ],
                "summary": "Create Payout Event",
                "parameters": [
                    {
                        "description": "Payout Event Data",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.PayoutEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/entity.PayoutEvent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.PayoutEvent": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "contains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "integer"
                },
                "entity": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "payload": {
                    "type": "object",
                    "properties": {
                        "payout": {
                            "type": "object",
                            "properties": {
                                "entity": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "integer"
                                        },
                                        "batch_id": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "integer"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "entity": {
                                            "type": "string"
                                        },
                                        "fee_type": {
                                            "type": "string"
                                        },
                                        "fees": {
                                            "type": "integer"
                                        },
                                        "fund_account_id": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "mode": {
                                            "type": "string"
                                        },
                                        "narration": {
                                            "type": "string"
                                        },
                                        "notes": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        },
                                        "purpose": {
                                            "type": "string"
                                        },
                                        "reference_id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "status_details": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "type": "string"
                                                },
                                                "source": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "tax": {
                                            "type": "integer"
                                        },
                                        "utr": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "entity.RequestToContactApi": {
            "type": "object",
            "properties": {
                "payee_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.RequestToFundAccountApi": {
            "type": "object",
            "properties": {
                "contact_id": {
                    "type": "string"
                }
            }
        },
        "entity.RequestToPayoutAccount": {
            "type": "object",
            "properties": {
                "payee_id": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Payout Service",
	Description:      "Payout Service using gin framework",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
